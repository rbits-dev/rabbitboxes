name: Deploy builds on dev and main server
on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy-on-main-server:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'


      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Install Angular CLI
        run: npm install -g @angular/cli@13

      - name: Build project
        run: NODE_OPTIONS=--openssl-legacy-provider ng build --base-href=/boxes/


      - name: Deploy to main server
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          pass: ${{ secrets.PASSWORD }}
          user: ${{ secrets.USERNAME }}
          host: ${{ secrets.HOSTNAME }}
          scp: |
            ./dist/boxes/* => /var/www/html/boxes

  build-and-deploy-on-dev-server:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'


      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Install Angular CLI
        run: npm install -g @angular/cli@13

      - name: Build project
        run: NODE_OPTIONS=--openssl-legacy-provider ng build --configuration=development

      - name: Deploy to main server
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          pass: ${{ secrets.DEVPASSWORD }}
          user: ${{ secrets.DEVUSERNAME }}
          host: ${{ secrets.DEVHOSTNAME }}
          scp: |
            ./dist/boxes/* => /var/www/html/rbitsdevnet
